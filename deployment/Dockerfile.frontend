# Simple runtime Dockerfile for pre-built frontend
FROM nginx:alpine

# Install curl for health checks  
RUN apk add --no-cache curl

# Create nginx pid directory with proper permissions
RUN mkdir -p /run/nginx && \
    chown -R nginx:nginx /run/nginx && \
    chmod -R 755 /run/nginx

# Copy nginx configuration first
COPY nginx.conf /etc/nginx/nginx.conf

# Remove default nginx files
RUN rm -rf /usr/share/nginx/html/*

# Copy pre-built frontend files
COPY . /usr/share/nginx/html/

# Remove nginx.conf from html directory if it was copied
RUN rm -f /usr/share/nginx/html/nginx.conf

# Set proper permissions for nginx user
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    chmod -R 755 /usr/share/nginx/html

# Switch to nginx user for security
USER nginx

# Expose port
EXPOSE 80

# Health check - removed as it causes issues
# Health checks will be handled by docker-compose or external monitoring

# Start nginx
CMD ["nginx", "-g", "daemon off;"]