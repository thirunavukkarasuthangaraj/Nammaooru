version: '3.8'

services:
  # Spring Boot Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: shop-backend-prod
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      # Connect to PostgreSQL on server host (not in Docker)
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/shop_management_db
      - SPRING_DATASOURCE_USERNAME=shopuser
      - SPRING_DATASOURCE_PASSWORD=SecurePassword@2024
      - JWT_SECRET=production-jwt-secret-key-2024-very-secure-change-this
      - FILE_UPLOAD_PATH=/app/uploads
      - APP_CORS_ALLOWED_ORIGINS=https://nammaoorudelivary.in,http://65.21.4.236
    ports:
      - "8082:8082"
    volumes:
      # Map to server photo storage folder
      - /opt/shop-uploads:/app/uploads
      - /var/log/shop-management:/app/logs
    networks:
      - shop-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shop-frontend-prod
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: shop-redis-prod
    restart: always
    command: redis-server --requirepass RedisSecure@2024Pass
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "RedisSecure@2024Pass", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy (optional, for production domains)
  nginx:
    image: nginx:alpine
    container_name: shop-nginx-prod
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /opt/shop-uploads:/var/www/uploads:ro
    depends_on:
      - backend
      - frontend
    networks:
      - shop-network

networks:
  shop-network:
    driver: bridge