# Nginx configuration for serving uploaded images
# Add this to your nginx site configuration

server {
    listen 80;
    listen 443 ssl;
    server_name nammaoorudelivary.in www.nammaoorudelivary.in;

    # ... existing SSL and other configurations ...

    # Frontend static files
    location / {
        root /opt/shop-management/frontend/dist/shop-management-frontend;
        try_files $uri $uri/ /index.html;
    }

    # API proxy - handle /api requests
    location /api/ {
        proxy_pass http://localhost:8082/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # IMPORTANT: Serve uploaded images directly
    # This should come BEFORE the /api location block
    location /uploads/ {
        # Point to the Docker volume mount path on the host
        alias /var/lib/docker/volumes/shop-management_uploads_data/_data/;
        
        # Or if you have a direct mount, use:
        # alias /opt/shop-management/uploads/;
        
        # Enable directory listing for debugging (remove in production)
        autoindex on;
        
        # Set proper headers for images
        add_header Cache-Control "public, max-age=31536000, immutable";
        
        # Security headers
        add_header X-Content-Type-Options nosniff;
        
        # CORS headers for images
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}