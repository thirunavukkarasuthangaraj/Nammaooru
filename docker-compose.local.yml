version: '3.8'

services:
  # NO PostgreSQL container - using local PostgreSQL installation
  
  # Spring Boot Backend
  backend:
    build: 
      context: ./backend
    container_name: backend
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-docker}
      # Connect to local PostgreSQL on host machine
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/${POSTGRES_DB:-shop_management_db}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD:-Thiruna$@02031994pass}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key-here}
      - FILE_UPLOAD_PATH=/app/uploads
      - APP_CORS_ALLOWED_ORIGINS=http://localhost:4200,http://localhost:8080
      - APP_CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - APP_CORS_ALLOWED_HEADERS=*
      - APP_CORS_ALLOW_CREDENTIALS=true
    ports:
      - "8082:8082"
    volumes:
      - D:/AAWS/nammaooru/shop-uploads:/app/uploads
    networks:
      - shop-network
    restart: unless-stopped

  # Angular Frontend 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # Use development Dockerfile
    container_name: shop-frontend
    image: shop-frontend:${BUILD_ID:-dev}
    environment:
      - NODE_ENV=development
    ports:
      - "8080:80"
    networks:
      - shop-network
    depends_on:
      - backend
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: shop-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-Thiruna$@02031994pass}
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-Thiruna$@02031994pass}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  uploads_data:
    driver: local

networks:
  shop-network:
    driver: bridge