name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: nammaooru/backend
  FRONTEND_IMAGE: nammaooru/frontend
  SERVER_HOST: ${{ secrets.HETZNER_HOST }}
  SERVER_USER: ${{ secrets.HETZNER_USER }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        password: ${{ secrets.HETZNER_PASSWORD }}
        script: |
          # Navigate to deployment directory
          cd /opt/shop-management
          
          # Clone/update repository
          if [ ! -d "shop-management-system" ]; then
            git clone https://github.com/thirunavukkarasuthangaraj/Nammaooru.git shop-management-system
          else
            cd shop-management-system && git pull origin main && cd ..
          fi
          
          # Copy source files
          cp -r shop-management-system/backend ./
          cp -r shop-management-system/frontend ./
          cp shop-management-system/docker-compose.yml ./
          
          # Stop existing containers
          docker-compose down || true
          
          # Build and start new containers locally
          docker-compose up -d --build
          
          # Clean up old images
          docker image prune -f
          
          # Health check
          sleep 15
          curl -f http://localhost:8082/actuator/health || echo "Backend starting..."
          
    - name: Verify deployment
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        password: ${{ secrets.HETZNER_PASSWORD }}
        script: |
          docker ps
          echo "Deployment completed successfully!"
          echo "Application URL: http://${{ env.SERVER_HOST }}"