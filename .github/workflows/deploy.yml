name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: nammaooru/backend
  FRONTEND_IMAGE: nammaooru/frontend
  SERVER_HOST: ${{ secrets.HETZNER_HOST }}
  SERVER_USER: ${{ secrets.HETZNER_USER }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        password: ${{ secrets.HETZNER_PASSWORD }}
        script: |
          # Navigate to deployment directory
          cd /opt/shop-management
          
          # Clone/update repository
          if [ ! -d "shop-management-system" ]; then
            git clone https://github.com/thirunavukkarasuthangaraj/Nammaooru.git shop-management-system
          else
            cd shop-management-system && git pull origin main && cd ..
          fi
          
          # Copy source files
          cp -r shop-management-system/backend ./
          cp -r shop-management-system/frontend ./
          cp shop-management-system/docker-compose.yml ./
          
          # Stop existing containers
          docker-compose down || true
          
          # Remove existing images to force rebuild (fixes cache issues)
          echo "Removing cached Docker images..."
          docker rmi nammaooru-frontend nammaooru-backend 2>/dev/null || true
          docker rmi $(docker images -f "dangling=true" -q) 2>/dev/null || true
          
          # Build and start new containers with no cache
          echo "Building containers with latest code..."
          docker-compose build --no-cache --pull
          docker-compose up -d
          
          # Clean up old/unused images
          docker image prune -af
          
          # Health check and version verification
          sleep 20
          echo "Checking backend health..."
          curl -f http://localhost:8082/actuator/health || echo "Backend starting..."
          
          echo "Checking version endpoints..."
          curl -f http://localhost:8082/api/version || echo "Version endpoint check..."
          
          echo "Deployment summary:"
          echo "Frontend version: $(cat shop-management-system/frontend/package.json | grep version | head -1 | cut -d '"' -f 4)"
          echo "Backend version: $(cat shop-management-system/backend/pom.xml | grep -m1 '<version>' | sed 's/.*<version>\(.*\)<\/version>.*/\1/')"
          
    - name: Verify deployment
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        password: ${{ secrets.HETZNER_PASSWORD }}
        script: |
          docker ps
          echo "Deployment completed successfully!"
          echo "Application URL: http://${{ env.SERVER_HOST }}"