# Production Configuration for Hetzner Server

server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/shop_management_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
    
  jpa:
    hibernate:
      ddl-auto: validate  # Use validate in production
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
    open-in-view: false
    
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

# File Storage Configuration - IMPORTANT FOR HETZNER
file:
  storage:
    # Option 1: Local storage on Hetzner (not recommended for scalability)
    type: ${FILE_STORAGE_TYPE:local}  # Options: local, s3, spaces, cloudinary
    
    # Local storage (use absolute path on server)
    local:
      base-path: ${FILE_STORAGE_PATH:/var/www/shop-management/uploads}
      serve-url: ${FILE_SERVE_URL:https://nammaoorudelivary.in/uploads}
    
    # Option 2: S3/Spaces Configuration (RECOMMENDED)
    s3:
      enabled: ${S3_ENABLED:false}
      endpoint: ${S3_ENDPOINT:https://fra1.digitaloceanspaces.com}  # DigitalOcean Spaces Frankfurt
      region: ${S3_REGION:fra1}
      bucket: ${S3_BUCKET:nammaooru-uploads}
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
      public-url: ${S3_PUBLIC_URL:https://nammaooru-uploads.fra1.cdn.digitaloceanspaces.com}
    
    # Option 3: Cloudinary (Good for image optimization)
    cloudinary:
      enabled: ${CLOUDINARY_ENABLED:false}
      cloud-name: ${CLOUDINARY_CLOUD_NAME}
      api-key: ${CLOUDINARY_API_KEY}
      api-secret: ${CLOUDINARY_API_SECRET}

# Application upload paths
app:
  upload:
    # Use environment variables for production
    dir: ${APP_UPLOAD_DIR:/var/www/shop-management/uploads}
    documents:
      path: ${DOCUMENT_UPLOAD_PATH:/var/www/shop-management/uploads/documents}
    product-images: ${PRODUCT_IMAGES_PATH:/var/www/shop-management/uploads/products}
    max-file-size: 10MB
    allowed-types: pdf,jpg,jpeg,png,docx,doc,webp
    
  frontend:
    base-url: ${FRONTEND_BASE_URL:https://nammaoorudelivary.in}
    
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://nammaoorudelivary.in,https://www.nammaoorudelivary.in}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}  # MUST be set as environment variable
  expiration: 86400000  # 24 hours

# Logging
logging:
  level:
    com.shopmanagement: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/shop-management/app.log
    max-size: 10MB
    max-history: 30

# Management/Monitoring
management:
  health:
    mail:
      enabled: false  # Disable mail health check that causes DOWN status
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true