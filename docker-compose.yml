version: '3.8'

services:
  # Spring Boot Backend (PostgreSQL is external - not in Docker)
  backend:
    build: 
      context: ./backend
    container_name: nammaooru-backend
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-production}
      - DB_URL=${DB_URL:-jdbc:postgresql://host.docker.internal:5432/shop_management_db}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key-here}
      - FILE_UPLOAD_PATH=/app/uploads
      - APP_UPLOAD_DIR=/app/uploads
      - DOCUMENT_UPLOAD_PATH=/app/uploads/documents
      - PRODUCT_IMAGES_PATH=products
      # Firebase configuration path (mounted from host)
      - FIREBASE_SERVICE_ACCOUNT_PATH=/app/firebase-config/firebase-service-account.json
      # CORS is configured in SecurityConfig.java - DO NOT set env vars here
      # - APP_CORS_ALLOWED_ORIGINS=https://nammaoorudelivary.in,https://www.nammaoorudelivary.in
      # - APP_CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      # - APP_CORS_ALLOWED_HEADERS=*
      # - APP_CORS_ALLOW_CREDENTIALS=true
    ports:
      - "0.0.0.0:8082:8080"
    volumes:
      # Mount host directory for persistent file storage (production)
      - /opt/shop-management/uploads:/app/uploads
      # Mount firebase-config directory (read-only for security)
      - ./firebase-config:/app/firebase-config:ro
    networks:
      - shop-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Angular Frontend 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nammaooru-frontend
    ports:
      - "8080:80"
    networks:
      - shop-network
    depends_on:
      - backend
    restart: unless-stopped

# Note: Using host directory mount (/opt/shop-management/uploads) instead of Docker volume
# This allows nginx to serve uploaded files directly

networks:
  shop-network:
    driver: bridge